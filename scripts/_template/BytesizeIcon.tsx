// INSPIRED & mostly stolen from: https://github.com/rhysd/react-component-bytesize-icons
// GENERATED BY: https://github.com/marianmeres/bytesize-icon-generator

import * as React from 'react';

export type BytesizeIconStrokeWidth =
    'ultra-light'
    | 'thin'
    | 'light'
    | 'regular'
    | 'medium'
    | 'bold'
    | 'heavy';

export type BytesizeIconSize =
    'smallest'
    | 'small'
    | 'regular'
    | 'larger'
    | 'largest';

export type BytesizeStrokeLineJoin = 'round' | 'bevel' | 'miter';

export type BytesizeStrokeLineCap = 'round' | 'butt';

export type BytesizeIconName =
    '<%= data.ICON_NAMES %>';

export interface BytesizeIconProps  {
    readonly name: BytesizeIconName;
    readonly thickness?: BytesizeIconStrokeWidth;
    readonly size?: BytesizeIconSize;
    readonly strokeLineJoin?: BytesizeStrokeLineJoin;
    readonly strokeLineCap?: BytesizeStrokeLineCap;
}

const STROKE_WIDTH_TO_PERCENT = {
    'ultra-light': 1.5625,
    thin: 3.125,
    light: 4.6875,
    regular: 6.25,
    medium: 7.8125,
    bold: 9.375,
    heavy: 10.9375,
} as {[name: string]: number};

const SIZE_TO_PERCENT_INCREMENT = {
    smallest: -3.125,
    small: -1.5625,
    regular: 0.0,
    larger: 1.5625,
    largest: 3.125,
} as {[name: string]: number};

const SIZE_TO_PIXELS = {
    smallest: 16,
    small: 24,
    regular: 32,
    larger: 48,
    largest: 64,
} as {[name: string]: number};

// prettier-ignore
const _renderer = (name, size, strokeWidth, strokeLineCap = 'round', strokeLineJoin = 'round') => {
    switch (name) {
        //remove-me//<%= data.CASES %>
        default:
            return null;
    }
};

// prettier-ignore
export const BytesizeIcon = (props: BytesizeIconProps) => {
    const { name, thickness, size, strokeLineCap, strokeLineJoin } = props;
    const width = (STROKE_WIDTH_TO_PERCENT[thickness || 'regular'] || 6.25);
    const increment = (SIZE_TO_PERCENT_INCREMENT[size || 'regular'] || 0);
    return _renderer(
        name,
        SIZE_TO_PIXELS[size || 'regular'] || 32,
        (width + increment) + '%',
        strokeLineCap,
        strokeLineJoin
    );
};
